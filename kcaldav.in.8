.\"	$Id$
.\"
.\" Copyright (c) 2015 Kristaps Dzonsons <kristaps@bsd.lv>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: April 11 2015 $
.Dt KCALDAV 8
.Os
.Sh NAME
.Nm kcaldav
.Nd simple CalDav server
.\" .Sh LIBRARY
.\" For sections 2, 3, and 9 only.
.\" Not used in OpenBSD.
.Sh SYNOPSIS
.Nm kcaldav
.Op Ar caldir
.Sh DESCRIPTION
The
.Nm
CGI program minimally implements CalDAV, with an emphasis on strong
authorisation and simplicity.
To use
.Nm ,
you'll need to first populate a calendar root directory
.Ar caldir .
This is relative to the CGI script's file-system root, defaulting to
.Pa @CALDIR@ .
This root requires a
.Xr kcaldav.passwd 5
password file and a
.Xr kcaldav.conf 5
configuration file for each calendar collection.
.Pp
Once installed, you can point your calendar client to the owned
collection within the calendar root.
.Pp
For example, assume the script has been installed into
.Pa /var/www/cgi-bin
and is reachable at
.Pp
.D1 http://localhost/cgi-bin/kcaldav
.Pp
Moreover, assume your calendar root
.Pa @CALDIR@
is based in the web server's
.Xr chroot 2
in
.Pa /var/www .
It contains a
.Xr kcaldav.passwd 5
and a single collection at
.Pa /var/www@CALDIR@/kristaps
consisting of
.Pa kcaldav.conf
and some calendars.
.Bd -unfilled -offset indent
.Pa /var/www@CALDIR@/kcaldav.passwd
.Pa /var/www@CALDIR@/kristaps
.Pa /var/www@CALDIR@/kristaps/kcaldav.conf
.Pa /var/www@CALDIR@/kristaps/vevent-001.ics
.Pa /var/www@CALDIR@/kristaps/vevent-002.ics
.Ed
.Pp
You can then point your browser to the following:
.Pp
.D1 http://localhost/cgi-bin/kcaldav/kristaps/
.Pp
Note the trailing slash, otherwise the request is interpreted as for a
resource (file), not a collection (directory).
.Ss System-Wide Calendar Administration
Let
.Ar caldir
be mapped to
.Pa /tmp ,
which is readable by the web server running as user www.
Let the dummy user kcaldav be the owner of kcaldav files.
First, initialise
.Xr kcaldav.passwd 5
to the appropriate permissions, then make
.Xr kcaldav.passwd 1
set-user-ID for modifying the file.
.Bd -literal -offset indent
# install -m 0640 -o kcaldav -g www /dev/null /tmp/kcaldav.passwd
# chown kcaldav @PREFIX@/bin/kcaldav.passwd
# chmod u+s @PREFIX@/bin/kcaldav.passwd
.Ed
.Pp
Create user principals as follows:
.Bd -literal -offset indent
# kcaldav.passwd -f /tmp -C -u <user1>
# kcaldav.passwd -f /tmp -C -u <user2>
# ...
.Ed
.Pp
Now any local user can modify her principal's password without
administrator intervention.
.Pp
.Dl user1% kcaldav.passwd -f /tmp
.Ss Local Calendar Administration
Let
.Ar caldir
be mapped to
.Pa /tmp ,
which is readable by the web server running as user www
and can read-writable by the logged-in user.
First, create the
.Xr kcaldav.passwd 5
as any user, then add principals as necessary.
.Bd -literal -offset indent
% install -m 640 /dev/null /tmp/kcaldav.passwd
# chgrp www /tmp/kcaldav.passwd
.Ed
.Pp
Then, create and modify principals as follows:
.Pp
.Dl % kcaldav.passwd -C -u <user> -f /tmp
.\" .Sh CONTEXT
.\" For section 9 functions only.
.Sh IMPLEMENTATION NOTES
The
.Nm
system is fairly complicated, though as simple as it can be.
It focusses on safety and security throughout.
In this section, I describe several important topics regarding
implementation.
.Ss Locking and Consistency
Internally,
.Nm
maintains iCalendar file
.Pq Dq resource
consistency by using file locks and temporary files.
New resources are written into a unique temporary file, which is the
existing filename with a leading dot, e.g., resource
.Pa 64496c38-7123-d242-9eba-e030f77a03f3.ics
has a temporary file of
.Pa .64496c38-7123-d242-9eba-e030f77a03f3.ics
in the same directory.
All leading-dot files are ignored when accessing files and disallowed
in the filename of submitted resources.
.Pp
By writing into a temporary file,
.Nm
safely checks for file-system limits.
.Pp
After writing the temporary file, the requested resource is opened and
exclusively locked, replaced with the temporary file, then unlocked.
.Pp
If the requested resource exists and is meant for overwrite, the
existing resource is opened and exclusively locked, its digest checked
against the requested digest
.Pq Dq etag ,
then the new resource replaced before unlocking.
.Pp
Resource read access is simpler: files are opened with shared advisory
locks.
This allows simultaneous read access whilst protecting resource
modification.
.Pp
The locking and consistency behaviour depends upon standards-defined
behaviour of
.Xr open 2
with
.Dv O_EXCL ,
.Dv O_SHLOCK
and
.Dv O_EXLOCK ;
.Xr flock 2
with
.Dv LOCK_EX
and
.Dv LOCK_SH ;
and
.Xr rename 2 .
.Nm
provides a compatibility layer for systems not supporting
.Dv O_SHLOCK
and
.Dv O_EXLOCK ,
such as Linux.
.Ss File-system Security
Each collection managed by
.Nm
must be within the predefined server root.
These collections are defined within
.Xr kcaldav.passwd 5 ,
relative to the server root.
Collections cannot contain path components (e.g.,
.Dq \&.. ) ,
guaranteeing that collections must exist within the root.
(Symbolic links are allowed for administrative ease.)
A collection is not considered as such unless it contains a well-formed
.Xr kcaldav.conf 5
file.
.Pp
Resource access is checked to be within a valid collection and not
contain any path-escaping characters.
Resources are not allowed to be symbolic links.
.Ss Authentication
.Nm
requires HTTP
.Dq QOP
digest authentication.
A nonce database
.Pa kcaldav.nonce.db
is maintained in the root calendar directory, consisting of nonce values
and their current nonce counts.
The
.Pa kcaldav.nonce.db
file is bound in size, with requests for new nonces evicting the oldest
request.
The use of nonces and nonce counts guarantees that principals are not
subject to replay attacks.
Nonces are 16-bytes of random data from
.Xr arc4random_buf 3 .
.Pp
To protect against attackers starving the nonce database by endlessly
requesting nonces (evicting valid nonces),
.Nm
uses a series of checks.
.Pp
When a client first accesses the system (without authentication), it is
given a random, unrecorded nonce.
.Pp
When the client re-authenticates using the random nonce and principal
credentials, the system first checks that the user is valid.
The nonce is then checked in the database.
If it is not found (the case for principals re-authenticating with the
random nonce), authentication is requested again with the
.Dq stale
directive and a new nonce entry in the database.
Replay nonces request a full re-authentication.
This step ensures that the principal is valid, though it could be a
replay attack from a nonce entry since evicted.
.Pp
Finally, the client re-authenticates with the recorded nonce and is able
to access the system.
.Pp
The remaining attack is for an adversary to build up a database of known
historical responses and replay them all at once.
.\" Not used in OpenBSD.
.\" .Sh RETURN VALUES
.\" For sections 2, 3, and 9 function return values only.
.\" .Sh ENVIRONMENT
.\" For sections 1, 6, 7, and 8 only.
.Sh FILES
The following files are required in the calendar root directory.
.Bl -tag -width Ds
.It Pa /kcaldav.passwd
Authorisation for all principals.
See
.Xr kcaldav.passwd 5 .
.It Pa /<collection>/kcaldav.conf
Given a directory path
.Pa <collection> ,
the
.Pa kcaldav.conf
file defines the collection properties.
See
.Xr kcaldav.conf 5 .
.El
.Pp
The following files may be created during runtime:
.Bl -tag -width Ds
.It Pa /kcaldav.nonce.db
A binary database of HTTP nonce values, their respective nonce counts,
and the age of the nonce value.
This database protects against authentication replay attacks.
.It Pa /<collection>/kcaldav.ctag
A cache file for the collection's ctag (entity tag for the collection).
This is automatically created and updated.
.El
.\" .Sh EXIT STATUS
.\" For sections 1, 6, and 8 only.
.\" .Sh EXAMPLES
.\" .Sh DIAGNOSTICS
.\" For sections 1, 4, 6, 7, 8, and 9 printf/stderr messages only.
.\" .Sh ERRORS
.\" For sections 2, 3, 4, and 9 errno settings only.
.\" .Sh SEE ALSO
.\" .Xr foobar 1
.Sh STANDARDS
The
.Nm
utility minimally implements RFC 4918 (WebDAV), RFC 4791 (CalDAV), and
of course RFC 2616 (HTTP).
It also implements the following extensions:
.Bl -tag -width Ds
.It RFC 7232
Conditional HTTP responses (etag,
.Dq If-Match ,
etc.).
.It RFC 2617
.Dq Digest
authentication of all users.
.It caldav-ctag-02
The
.Dq ctag
Calendar Server Extension.
.It RFC 3744
ACL queries on the authenticated principal (not ACEs).
.It RFC 5397
The current principal address.
.It RFC 4331
Available and used bytes in the collection file-system via
.Xr fstatfs 2 .
.El
.\" .Sh HISTORY
.\" .Sh AUTHORS
.Sh CAVEATS
Quotas (via
.Xr quotactl 2 )
are not yet supported because the library interface is too damn
complicated.
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
.\" Not used in OpenBSD.
